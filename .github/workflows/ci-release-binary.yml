name: release-binary

on:
  workflow_run:
    workflows: [ build ]
    branches: [ master ]
    types: [completed]

jobs:
  release-linux-windows-binary:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: ubuntu-latest
    steps:
    
      - name: set up go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
        id: go
        
      - name: checkout
        uses: actions/checkout@v3
        
      # build frontend stage
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
          cache-dependency-path: "frontend/yarn.lock"

      - name: Install project dependencies
        working-directory: ./frontend
        run: |
          yarn --prefer-offline

      - name: Build frontend
        working-directory: ./frontend
        run: |
          yarn build
          cp -r build/* ../app/web
          ls -l ../app/web

      - name: Install cross-compiler for linux/arm64
        run: |
          sudo apt-get update
          sudo apt-get -y install gcc-aarch64-linux-gnu mingw-w64 gcc-arm*
        
      - name: Create release
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --config .goreleaser.yml  --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}

  release-darwin-binary:
    if: ${{ github.event.workflow_run.conclusion == 'success' }} && ${{ startsWith(github.ref, 'refs/tags/') }}
    runs-on: macos-latest
    steps:
    
      - name: set up go 1.19
        uses: actions/setup-go@v3
        with:
          go-version: '1.19'
        id: go
        
      - name: checkout
        uses: actions/checkout@v3
        
      # build frontend stage
      - name: Install node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node }}
          cache: 'yarn'
          cache-dependency-path: "frontend/yarn.lock"

      - name: Install project dependencies
        working-directory: ./frontend
        run: |
          yarn --prefer-offline
      - name: Build frontend
        working-directory: ./frontend
        run: |
          yarn build
          cp -r build/* ../app/web
        
      - name: Create release
        uses: goreleaser/goreleaser-action@v4
        with:
          distribution: goreleaser
          version: latest
          args: release --rm-dist --config .goreleaser-darwin.yml  --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_TOKEN }}          
